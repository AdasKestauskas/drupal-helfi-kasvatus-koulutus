/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/high-school-mobile-menu.js":
/*!*******************************************!*\
  !*** ./src/js/high-school-mobile-menu.js ***!
  \*******************************************/
/***/ (function() {

eval("(function ($, Drupal) {\n  'use strict'; // This javascript clones group menu from sidebar navigation, edits it to have\n  // same structure as the mobile menu that comes from the menu--mobile.html.twig\n  // template and injects it to the mobile menu where a parent menu item is\n  // defined.\n\n  $(document).ready(function () {\n    if (!checkRequiredElements()) {\n      return;\n    } // Save the menu link to variable now that we know it exists.\n\n\n    const mobileGroupMenuContainer = $('.cssmenu-menu .high-school-parent').parent(); // Add classes to indicate active-trail to the list items and links.\n\n    mobileGroupMenuContainer.addClass('cssnav__item--in-path');\n    $(mobileGroupMenuContainer).parentsUntil('.cssmenu-menu', 'li').addClass('cssnav__item--in-path');\n    $('.cssnav__item--in-path > a').addClass('cssnav__link--in-path');\n    $('.cssnav__item--in-path > details').attr('open', ''); // Clone the first level item to be used for mobile navigation.\n\n    const menuTitleLink = $('.sidebar-navigation__title > a').clone(); // Add required class for the first level link.\n\n    menuTitleLink.attr('class', 'cssnav__link cssnav__link--in-path'); // Clone the sidebar navigation tree.\n\n    const sidebarNavigationElement = $('.sidebar-navigation > .menu').clone(); // Clean up the cloned sidebar navigation. Get the ul-element and\n    // remove ul-element classes and add classes 'cssnav cssnav__subnav'\n\n    sidebarNavigationElement.attr('class', 'cssnav cssnav__subnav'); // After the ul-element is cleaned up loop through all li-elements. Using the\n    // modify_list_item above for that.\n\n    $(sidebarNavigationElement).find('.menu__item').each(function () {\n      $(this).attr('class', 'cssnav__item cssnav__item--level-5');\n      const link = $(this).find('span > a');\n      $(this).find('span')[0].remove();\n      link.appendTo($(this));\n      link.addClass('cssnav__link'); // Check if one of links is the active one and change the class to correct\n      // one.\n\n      if ($(link).hasClass('menu__link--active-trail')) {\n        $(link).addClass('cssnav__link--in-path');\n        $(link).removeClass('menu__link--active-trail');\n      }\n    }); // Create DOM-elements for the summary block inside navigation elements that\n    // have children.\n\n    const summary = document.createElement('summary');\n    const spanTextMirror = document.createElement('span');\n    const spanToggle = document.createElement('span');\n    const spanVisuallyHidden = document.createElement('span'); // Add correct classes for the span elements inside summary.\n\n    spanTextMirror.className = 'cssnav__text-mirror';\n    spanToggle.className = 'cssnav__toggle';\n    spanVisuallyHidden.className = 'visually-hidden'; // Add text to work as a placeholder for further replacement.\n\n    spanTextMirror.innerHTML = 'placeholder';\n    spanVisuallyHidden.innerHTML = Drupal.t('Toggle submenu:') + ' placeholder';\n    spanToggle.append(spanVisuallyHidden); // Insert all spans inside summary element.\n\n    summary.append(spanTextMirror, spanToggle); // Create the list item element where the group menu is appended.\n\n    const li = document.createElement('li');\n    li.className = 'cssnav__item cssnav__item--level-4 cssnav__item--has-children';\n    menuTitleLink.appendTo(li);\n    li.append(createDetailsElement(summary, sidebarNavigationElement, menuTitleLink)); // Check if there is more than one element inside the element that contains\n    // the parent for link for high school group menu.\n\n    if (mobileGroupMenuContainer.children().length > 1) {\n      // Append the list item after the existing items.\n      mobileGroupMenuContainer.find('.cssnav__subnav')[0].append(li);\n    } else {\n      // Create ul-element to wrap the list item where the group menu is.\n      const ul = document.createElement('ul');\n      ul.className = 'cssnav cssnav__subnav';\n      ul.append(li); // The DOM-structure needs also the details-element to function correctly.\n\n      const parentDetails = createDetailsElement(summary, ul, mobileGroupMenuContainer); // Append everything to the parent list item.\n\n      mobileGroupMenuContainer.append(parentDetails); // Add required class to indicate that menu item has children.\n\n      mobileGroupMenuContainer.addClass('cssnav__item--has-children');\n    }\n  });\n\n  const checkRequiredElements = () => {\n    // Check if there is the high school parent class added in the menu and that\n    // the sidebar has group menu (and not some other menu).\n    if (!$('.cssmenu-menu .high-school-parent').length || !$('.sidebar-navigation--group-menu').length) {\n      return false;\n    } // Make sure the sidebar navigation has items to inject to the mobile menu.\n\n\n    if (!$('.sidebar-navigation > .menu')) {\n      return false;\n    }\n\n    return true;\n  }; // Create details function that returns details dom-element based on variables\n  // that are given to it.\n\n\n  const createDetailsElement = (summary, content, linkName) => {\n    let newSummary = summary.cloneNode(true);\n    const details = document.createElement('details');\n    const summaryTitle = linkName.textContent; // Replace all instances of placeholder with the summary title.\n\n    newSummary.innerHTML = newSummary.innerHTML.replace(/placeholder/g, summaryTitle);\n    $(newSummary).appendTo(details);\n    $(content).appendTo(details);\n    $(details).attr('open', '');\n    return details;\n  };\n})(jQuery, Drupal);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/high-school-mobile-menu.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/high-school-mobile-menu.js"]();
/******/ 	
/******/ })()
;
//# sourceMappingURL=high-school-mobile-menu.min.js.map